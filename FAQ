Q: Why not using floating numbers in the arithmetic?
A: Some part of the software is a proof of concept and verification 
     of an electronic version. I wouldn't consume all the FPGA
     for irrelevant precision

Q: Why the midi codes?
A: Many little reasons.
     They are supper short messages which make easy interfaces over networks
     A lot of software can edit them
     The electronic version requires a few resources (Ethernet or USB stacks consume all the FPGA)
     Interfaces like DTMF or a super DTMF should be possible for the video

Q: Why a slow moving to the C++17?
A: I need to run on an old compiler on an old machine. I don't know what is or is not
     properly supported. The features are tested one by one before production.

Q: Why so old minimum versions?
A: I need to run it on an old machine. It had the 4.6.2 version of GCC
     Since I needed a newer version for many other purposes. I moved to the 5.5.0
     Then, the software was C++03. Now the software is C++14.
	 I have needed even more. I moved to the 7.2.0
     after 8 hours to compile the compiler.
	 Then now, all the features of the C++14, perhaps C++17, can be used

Q: What is the purpose of the no operation instructions in the input command files?
A: The examples of the early versions has been hand edited. Not all the reverse hex-dump software
     accepts (text) files without addresses. An insertion needs to update all the file.
     The NOP allows keeping some room.